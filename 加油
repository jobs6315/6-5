#include<stdio.h>
//#include<string.h>
//int is_revolve(char str1[], char str2[], int len1, int len2)
//{
//	int j = 0;
//	while (j<len1)
//	{
//		char tmp = str1[0];
//		int i = 0;
//		while (i < len1 - 1)
//		{
//			str1[i] = str1[i + 1];
//			i++;
//		}
//		str1[i] = tmp;
//		if (strcmp(str1,str2)==0)
//		{
//			return 1;
//			break;
//		}
//		j++;
//	}
//	return 0;
//}
//int main()
//{
//	char s1[] = "AABCD";
//	char s2[] = "DAABC";
//	int len1 = strlen(s1);
//	int len2 = strlen(s2);
//	int ret = is_revolve(s1, s2, len1, len2);
//	if (ret == 1)
//		printf("是");
//	else
//		printf("否");
//	return 0;
//}
//int test(const char* str)
//{
//	printf("test()\n");
//	return 0;
//}
//int main()
//{
//	int(*pf)(const char*) = test;
//	(*pf)("abc");
//	test("abc");
//	pf("abc");
//	return 0;
//}
//typedef void(*pf_t)(int);//把void(*)(int)类型重命名为pf_t
//int main()
//{
//	//(*(void(*)())0)()
//	void(*signal(int, void(*)(int)))(int);
//	pf_t signal(int, pf_t);
//	return 0;
//}
//void menu()
//{
//	printf("**********************\n");
//	printf("**** 1.add  2.sub ****\n");
//	printf("**** 3.mul  4.div ****\n");
//	printf("****   0.exit     ****\n");
//}
//int Add(int x, int y)
//{
//	return x + y;
//}
//void calc(int(*pf)(int, int))
//{
//	int x = 0;
//	int y = 0;
//	int ret = 0;
//	printf("请输入2个操作数：>");
//	scanf_s("%d %d", &x, &y);
//	ret = pf(x, y);
//	printf("%d\n", ret);
//}
//int main()
//{
//	int input = 0;
//	int x = 0;
//	int y = 0;
//	int ret = 0;
//	int(*pfArr[])(int, int) = { 0,Add,Sub,Mul,Div };
//	do
//	{
//		menu();
//		printf("请选择：>");
//		scanf_s("%d", &input);
//		if(input==0)
//		{
//			printf("退出计算器\n");
//		}
//		else if(input>=1&&input<=4)
//		{
//			ret = pfArr[input](x, y);
//		}
//	} while (input);
//	return 0;
//}

//int main(void)
//{
//	char* str1 = "abc";
//	char* str2 = "abc";
// if
// {
//		printf("str1和str2相同!\n");
//	}
//	else {
//		printf("str1和str2不相同!\n");
//	}
//
//	return 0;
//}
//int Add(int x, int y)
//{
//	return x + y;
//}
//int main()
//{
//
//	int(*pf)(int, int) = Add;
//	int(*arr[1])(int, int) = { Add };
//	return 0;
//}
//int main()
//{
//	int(*pfArr[])(int, int) = { 0,Add,Sub,Mul,Div };
//	int(*(*ppfArr)[5])(int, int) = &pfArr;
//	return 0;
//}
int cmp_int(const void* e1, const void* e2)
{
	return (*(int*)e1 - *(int*)e2);
}
void Swap(char* buf1, char* buf2, int width)
{
	int i = 0;
	for (i = 0;i < width;i++)
	{
		char tmp = *buf1;
		*buf1 = *buf2;
		*buf2 = tmp;
		buf1++;
		buf2++;
	}
}
void bubble_sort(void*base,int sz,int width,int(*cmp)(const void*e1,const void*e2))
{
	int i = 0;
	for (i = 0;i < sz - 1;i++)
	{
		int flag = 1;
		int j = 0;
		for (j = 0;j < sz - 1 - i;j++)
		{
			/*if (arr[i] > arr[i + 1])
			{
				temp = arr[i];
				arr[i] = arr[i + 1];
				arr[i + 1] = temp;
			}*/
			if (cmp((char*)base + j * width, (char*)base + (j + 1) * width) > 0)
			{
				Swap((char*)base + j * width, (char*)base + (j + 1) * width, width);
				flag = 0;
			}
		}
		if (flag == 1)
		{
			break;
		}
	}
}
void test3()
{
	int arr[] = { 9,8,7,6,5,4,3,2,1 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr, sz, sizeof(arr[0]), cmp_int);
	int i = 0;
	for (i = 0;i < sz;i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}

//int main()
//{
//	int arr[] = { 5,8,1,6,9,2,3,4,7 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	qsort(arr, sz, sizeof(arr[0]), cmp_int);
//	int i = 0;
//	for (i = 0;i < sz;i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	return 0;
//}
//int main()
//{
//	int a = 10;
//	//char* pa = &a;//int*
//	void* pv = &a;//void*是无具体类型的指针，可以接收任意类型的地址
//	//
//	return 0;
//}
//#include<stdlib.h>
//struct Stu
//{
//	char name[20];
//	int age;
//};
//int cmp_stu_by_name(const void* e1, const void* e2)
//{
//	return strcmp(((struct Stu*)e1)->name, ((struct Stu*)e2)->name);
//}
//void test2()
//{
//	struct Stu s[] = { {"zhangsan",15},{"lisi",30},{"wangwu",25} };
//	int sz = sizeof(s) / sizeof(s[0]);
//	qsort(s, sz, sizeof(s[0]), cmp_stu_by_name);
//}
int main()
{
	test3();
	return 0;
}
